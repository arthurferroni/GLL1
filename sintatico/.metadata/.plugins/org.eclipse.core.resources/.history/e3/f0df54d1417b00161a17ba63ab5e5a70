package br.uefs.control;
import br.uefs.lib.*;

import java.util.LinkedList;
import java.util.Stack;

public class Sintatico {
	
	static Stack<Integer> pilha = new Stack<Integer>();
	static LinkedList<Token> tokens = new LinkedList<Token>();
	int i = 0 ;
	Producao prod = new Producao(pilha); 
	
	public void analises()
	{
		int valor;
		while(true){
			valor = pilha.peek();
			if(valor == Library.tk_dolar && tokens.isEmpty())
				Debuger.sysPrint("Sucess\n");
			else if(pilha.isEmpty())
				Debuger.sysPrint("Empty\n");
			else if(pilha.isEmpty() && tokens.size() != 0)
				Debuger.sysPrint("Error\n");
			else if(valor == Library.tk_dolar)
				Debuger.sysPrint("Sucess\n");
			
			else if (valor == tokenAtualId())
			{
				consumirToken();
				pilha.pop();
			}
			else if(valor != tokenAtualId())
			{
				
			}
			
			
		}
	}

	private void consumirToken() {
		i++;
	}

	private int tokenAtualId(){	
		if(i >= tokens.size())
		{ 
			return Library.tk_dolar;
		}
		Token aux = tokens.get(i);
		return get_token_id(aux);
	}

	private int get_token_id(Token aux) {
		// TODO Auto-generated method stub
		return 0;
	}
	
	
}

class Producao{
	
	private Stack<Integer> a_pilha; 
	
	public Producao(Stack<Integer> p)
	{
		this.setA_pilha(p);
	}
	
	
	public void gerador()
	{
		
	}

	
	public Stack<Integer> getA_pilha() {
		return this.a_pilha;
	}
	public void setA_pilha(Stack<Integer> a_pilha) {
		this.a_pilha = a_pilha;
	}
}