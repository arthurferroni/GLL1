package br.uefs.control;
import br.uefs.lib.*;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Stack;

public class Sintatico {
	
	static Stack<Integer> pilha = new Stack<Integer>();
	static LinkedList<Token> tokens_int = new LinkedList<Token>();
	static LinkedList<Integer> tokens = new LinkedList<Integer>();
	static int[][]_matriz = new int[800][800];
	int i = 0 ;
	
	
	public static void main(String args[])
	{
		new Sintatico().analises();
		
	}
	public void startMatriz()
	{
		// PROGRAMA
		_matriz[Library.nt_programa][Library.tk_programa] = Library.nt_inicio_func; 
		_matriz[Library.nt_programa][Library.tk_var] = Library.nt_inicio_var_func; 
		_matriz[Library.nt_programa][Library.tk_const] = Library.nt_inicio_const_var_func;
		_matriz[Library.nt_programa][Library.tk_funcao] = Library.nt_inicio_func; 
		//DEC_CONST
		_matriz[Library.nt_dec_const][Library.tk_const] = Library.nt_dec_const; 
		_matriz[Library.nt_dec_const_continuo][Library.tk_inteiro] = Library.nt_dec_const_continuo; 
		_matriz[Library.nt_dec_const_continuo][Library.tk_booleano] = Library.nt_dec_const_continuo; 
		_matriz[Library.nt_dec_const_continuo][Library.tk_cadeia] = Library.nt_dec_const_continuo;
		_matriz[Library.nt_dec_const_continuo][Library.tk_real] = Library.nt_dec_const_continuo; 
		_matriz[Library.nt_dec_const_continuo][Library.tk_caractere] = Library.nt_dec_const_continuo; 
		// TIPO N
		_matriz[Library.nt_tipo_n][Library.tk_inteiro] = Library.nt_tipo_c1; 
		_matriz[Library.nt_tipo_n][Library.tk_booleano] = Library.nt_tipo_c3; 
		_matriz[Library.nt_tipo_n][Library.tk_cadeia] = Library.nt_tipo_c4;
		_matriz[Library.nt_tipo_n][Library.tk_real] = Library.nt_tipo_c2; 
		_matriz[Library.nt_tipo_n][Library.tk_caractere] = Library.nt_tipo_c5; 
		//DEC_CONST_1
		Arrays.fill(_matriz[Library.nt_dec_const_i], Library.nt_epsilon);
		_matriz[Library.nt_dec_const_i][Library.tk_virgula] = Library.nt_dec_const_i; 
		//DEC_CONST_2
		Arrays.fill(_matriz[Library.nt_dec_const_ii], Library.nt_epsilon);
		_matriz[Library.nt_dec_const_ii][Library.tk_inteiro] = Library.nt_dec_const_ii; 
		_matriz[Library.nt_dec_const_ii][Library.tk_booleano] = Library.nt_dec_const_ii; 
		_matriz[Library.nt_dec_const_ii][Library.tk_cadeia] = Library.nt_dec_const_ii;
		_matriz[Library.nt_dec_const_ii][Library.tk_real] = Library.nt_dec_const_ii; 
		_matriz[Library.nt_dec_const_ii][Library.tk_caractere] = Library.nt_dec_const_ii; 
		// DEC_CONST_VAR_DERIVADA
		_matriz[Library.nt_dec_const_var_derivada][Library.tk_var] = Library.nt_dec_const_var_derivada_c1; 
		_matriz[Library.nt_dec_const_var_derivada][Library.tk_funcao] = Library.nt_dec_const_var_derivada_c2; 
		_matriz[Library.nt_dec_const_var_derivada][Library.tk_programa] = Library.nt_dec_const_var_derivada_c2; 
		//DEC_VAR
		_matriz[Library.nt_dec_var][Library.tk_var] = Library.nt_dec_var; 
		_matriz[Library.nt_dec_var_continuo][Library.tk_inteiro] = Library.nt_dec_var_continuo; 
		_matriz[Library.nt_dec_var_continuo][Library.tk_booleano] = Library.nt_dec_var_continuo; 
		_matriz[Library.nt_dec_var_continuo][Library.tk_cadeia] = Library.nt_dec_var_continuo;
		_matriz[Library.nt_dec_var_continuo][Library.tk_real] = Library.nt_dec_var_continuo; 
		_matriz[Library.nt_dec_var_continuo][Library.tk_caractere] = Library.nt_dec_var_continuo; 
		// DEC_VAR_I
		Arrays.fill(_matriz[Library.nt_dec_var_i], Library.nt_epsilon);
		_matriz[Library.nt_dec_var_i][Library.tk_virgula] = Library.nt_dec_var_i; 
		// DEC_VAR_II
		Arrays.fill(_matriz[Library.nt_dec_var_ii], Library.nt_epsilon);
		_matriz[Library.nt_dec_var_ii][Library.tk_inteiro] = Library.nt_dec_var_ii; 
		_matriz[Library.nt_dec_var_ii][Library.tk_booleano] = Library.nt_dec_var_ii; 
		_matriz[Library.nt_dec_var_ii][Library.tk_cadeia] = Library.nt_dec_var_ii;
		_matriz[Library.nt_dec_var_ii][Library.tk_real] = Library.nt_dec_var_ii; 
		_matriz[Library.nt_dec_var_ii][Library.tk_caractere] = Library.nt_dec_var_ii; 
		// ARRAY
		Arrays.fill(_matriz[Library.nt_array], Library.nt_epsilon);
		_matriz[Library.nt_array][Library.tk_menor] = Library.nt_array; 
		// ARRAY INDEX
		Arrays.fill(_matriz[Library.nt_array_indexes], Library.nt_exp_simples);
		// ARRAY_I
		Arrays.fill(_matriz[Library.nt_array_i], Library.nt_epsilon);
		_matriz[Library.nt_array_i][Library.tk_virgula] = Library.nt_array_i; 
		// EXP_RELACIONAL_BOOL
		_matriz[Library.nt_exp_relacional_bool][Library.tk_numero] = Library.nt_exp_relacional_bool; 
		_matriz[Library.nt_exp_relacional_bool][Library.tk_booleano] = Library.nt_exp_relacional_bool; // TODO VERDADE - FALSO
		_matriz[Library.nt_exp_relacional_bool][Library.tk_subtracao] = Library.nt_exp_relacional_bool;
		_matriz[Library.nt_exp_relacional_bool][Library.tk_menor] = Library.nt_exp_relacional_bool;
		_matriz[Library.nt_exp_relacional_bool][Library.tk_cadeia_de_caracteres] = Library.nt_exp_relacional_bool;
		_matriz[Library.nt_exp_relacional_bool][Library.tk_nao] = Library.nt_exp_relacional_bool;
		_matriz[Library.nt_exp_relacional_bool][Library.tk_soma] = Library.nt_exp_relacional_bool;
		_matriz[Library.nt_exp_relacional_bool][Library.tk_caractere_l] = Library.nt_exp_relacional_bool; 
		_matriz[Library.nt_exp_relacional_bool][Library.tk_abrir_parentese] = Library.nt_exp_relacional_bool;
		_matriz[Library.nt_exp_relacional_bool][Library.tk_identificador] = Library.nt_exp_relacional_bool;
		// EXP_CONJU
		_matriz[Library.nt_exp_conjunta][Library.tk_numero] = Library.nt_exp_conjunta; 
		_matriz[Library.nt_exp_conjunta][Library.tk_booleano] = Library.nt_exp_conjunta; // TODO VERDADE - FALSO
		_matriz[Library.nt_exp_conjunta][Library.tk_subtracao] = Library.nt_exp_conjunta;
		_matriz[Library.nt_exp_conjunta][Library.tk_menor] = Library.nt_exp_conjunta;
		_matriz[Library.nt_exp_conjunta][Library.tk_cadeia_de_caracteres] = Library.nt_exp_conjunta;
		_matriz[Library.nt_exp_conjunta][Library.tk_nao] = Library.nt_exp_conjunta;
		_matriz[Library.nt_exp_conjunta][Library.tk_soma] = Library.nt_exp_conjunta;
		_matriz[Library.nt_exp_conjunta][Library.tk_caractere_l] = Library.nt_exp_conjunta;  
		_matriz[Library.nt_exp_conjunta][Library.tk_abrir_parentese] = Library.nt_exp_conjunta;
		_matriz[Library.nt_exp_conjunta][Library.tk_identificador] = Library.nt_exp_conjunta;
		// EXP_CONJ_I
		Arrays.fill(_matriz[Library.nt_exp_conjunta_i], Library.nt_epsilon);
		_matriz[Library.nt_exp_conjunta_i][Library.tk_ou] = Library.nt_exp_conjunta_i;
		//EXP_RELACIONAL
		_matriz[Library.nt_exp_relacional][Library.tk_numero] = Library.nt_exp_relacional; 
		_matriz[Library.nt_exp_relacional][Library.tk_booleano] = Library.nt_exp_relacional; // TODO VERDADE - FALSO
		_matriz[Library.nt_exp_relacional][Library.tk_subtracao] = Library.nt_exp_relacional;
		_matriz[Library.nt_exp_relacional][Library.tk_menor] = Library.nt_exp_relacional;
		_matriz[Library.nt_exp_relacional][Library.tk_cadeia_de_caracteres] = Library.nt_exp_relacional;
		_matriz[Library.nt_exp_relacional][Library.tk_nao] = Library.nt_exp_relacional;
		_matriz[Library.nt_exp_relacional][Library.tk_soma] = Library.nt_exp_relacional;
		_matriz[Library.nt_exp_relacional][Library.tk_caractere_l] = Library.nt_exp_relacional;  
		_matriz[Library.nt_exp_relacional][Library.tk_abrir_parentese] = Library.nt_exp_relacional;
		_matriz[Library.nt_exp_relacional][Library.tk_identificador] = Library.nt_exp_relacional;
		//EXP_RELACIONAL_I
		Arrays.fill(_matriz[Library.nt_exp_relacional_i], Library.nt_epsilon);
		_matriz[Library.nt_exp_relacional_i][Library.tk_e] = Library.nt_exp_relacional_i;
		// NOT_OPC
		Arrays.fill(_matriz[Library.nt_not_opc], Library.nt_epsilon);
		_matriz[Library.nt_not_opc][Library.tk_nao] = Library.nt_not_opc;
		// EXPR_SIMPLES
		_matriz[Library.nt_exp_simples][Library.tk_numero] = Library.nt_exp_simples; 
		_matriz[Library.nt_exp_simples][Library.tk_booleano] = Library.nt_exp_simples; // TODO VERDADE - FALSO
		_matriz[Library.nt_exp_simples][Library.tk_subtracao] = Library.nt_exp_simples_c2;
		_matriz[Library.nt_exp_simples][Library.tk_menor] = Library.nt_exp_simples;
		_matriz[Library.nt_exp_simples][Library.tk_cadeia_de_caracteres] = Library.nt_exp_simples;
		_matriz[Library.nt_exp_simples][Library.tk_soma] = Library.nt_exp_simples_c2;
		_matriz[Library.nt_exp_simples][Library.tk_caractere_l] = Library.nt_exp_simples;  
		_matriz[Library.nt_exp_simples][Library.tk_abrir_parentese] = Library.nt_exp_simples;
		_matriz[Library.nt_exp_simples][Library.tk_identificador] = Library.nt_exp_simples;
		// OP+|- | * | /
		_matriz[Library.nt_op_mais_menos][Library.tk_soma] = Library.nt_op_mais_menos_c1;
		_matriz[Library.nt_op_mais_menos][Library.tk_subtracao] = Library.nt_op_mais_menos_c2;
		_matriz[Library.nt_op_multi_div][Library.tk_multiplicacao] = Library.nt_op_multi_div_c1;
		_matriz[Library.nt_op_multi_div][Library.tk_divisao] = Library.nt_op_multi_div_c2;
		// TERMO
		_matriz[Library.nt_termo][Library.tk_numero] = Library.nt_termo; 
		_matriz[Library.nt_termo][Library.tk_booleano] = Library.nt_termo;  // TODO VERDADE - FALSO
		_matriz[Library.nt_termo][Library.tk_menor] = Library.nt_termo;
		_matriz[Library.nt_termo][Library.tk_cadeia_de_caracteres] = Library.nt_termo;
		_matriz[Library.nt_termo][Library.tk_caractere_l] = Library.nt_termo;  
		_matriz[Library.nt_termo][Library.tk_abrir_parentese] = Library.nt_termo;
		_matriz[Library.nt_termo][Library.tk_identificador] = Library.nt_termo;
		// TERMO_I
		Arrays.fill(_matriz[Library.nt_termo_i], Library.nt_epsilon);
		_matriz[Library.nt_termo_i][Library.tk_soma] = Library.nt_termo_i;
		_matriz[Library.nt_termo_i][Library.tk_subtracao] = Library.nt_termo_i;
		// FATOR
		_matriz[Library.nt_fator][Library.tk_numero] = Library.nt_fator_c1; 
		_matriz[Library.nt_fator][Library.tk_booleano] = Library.nt_fator_c2;  // TODO VERDADE - FALSO
		_matriz[Library.nt_fator][Library.tk_menor] = Library.nt_id_funcao_e_outros; 
		_matriz[Library.nt_fator][Library.tk_cadeia_de_caracteres] = Library.nt_fator_c3;
		_matriz[Library.nt_fator][Library.tk_caractere_l] = Library.nt_fator_c4;  
		_matriz[Library.nt_fator][Library.tk_abrir_parentese] = Library.nt_fator_c5;
		_matriz[Library.nt_fator][Library.tk_identificador] = Library.nt_id_funcao_e_outros_derivado; 
		//FATOR_I
		Arrays.fill(_matriz[Library.nt_fator_i], Library.nt_epsilon);
		_matriz[Library.nt_fator_i][Library.tk_multiplicacao] = Library.nt_fator_i;
		_matriz[Library.nt_fator_i][Library.tk_divisao] = Library.nt_fator_i;
		// POSSI_F
		Arrays.fill(_matriz[Library.nt_possible_func], Library.nt_epsilon);
		_matriz[Library.nt_possible_func][Library.tk_abrir_parentese] = Library.nt_possible_func;
		// PASSA PARAM
		Arrays.fill(_matriz[Library.nt_passa_param], Library.nt_epsilon);
		_matriz[Library.nt_passa_param][Library.tk_numero] = Library.nt_passa_param; 
		_matriz[Library.nt_passa_param][Library.tk_booleano] = Library.nt_passa_param;  // TODO VERDADE - FALSO
		_matriz[Library.nt_passa_param][Library.tk_subtracao] = Library.nt_passa_param;
		_matriz[Library.nt_passa_param][Library.tk_menor] = Library.nt_passa_param;
		_matriz[Library.nt_passa_param][Library.tk_cadeia_de_caracteres] = Library.nt_passa_param;
		_matriz[Library.nt_passa_param][Library.tk_nao] = Library.nt_passa_param;
		_matriz[Library.nt_passa_param][Library.tk_soma] = Library.nt_passa_param;
		_matriz[Library.nt_passa_param][Library.tk_caractere_l] = Library.nt_passa_param; 
		_matriz[Library.nt_passa_param][Library.tk_abrir_parentese] = Library.nt_passa_param;
		_matriz[Library.nt_passa_param][Library.tk_identificador] = Library.nt_passa_param;
		// PASSA PARAM I
		Arrays.fill(_matriz[Library.nt_passa_param_i], Library.nt_epsilon);
		_matriz[Library.nt_passa_param_i][Library.tk_virgula] = Library.nt_passa_param;
		// OPERAR_RELACIONALMENTE  '>' | '>=' | '<' | '<=' | '<>'
		Arrays.fill(_matriz[Library.nt_operar_relacionalmente], Library.nt_epsilon);
		_matriz[Library.nt_operar_relacionalmente][Library.tk_menor] = Library.nt_operar_relacionalmente_c1;
		_matriz[Library.nt_operar_relacionalmente][Library.tk_maior] = Library.nt_operar_relacionalmente_c2;
		_matriz[Library.nt_operar_relacionalmente][Library.tk_menorigual] = Library.nt_operar_relacionalmente_c3;
		_matriz[Library.nt_operar_relacionalmente][Library.tk_maiorigual] = Library.nt_operar_relacionalmente_c4;
		_matriz[Library.nt_operar_relacionalmente][Library.tk_diferente] = Library.nt_operar_relacionalmente_c5;
		// DEC_FUNC
		Arrays.fill(_matriz[Library.nt_dec_func], Library.nt_epsilon);
		_matriz[Library.nt_dec_func][Library.tk_funcao] = Library.nt_dec_func;
		
		//DEC_FUNC_i
		_matriz[Library.nt_dec_func_i][Library.tk_identificador] = Library.nt_dec_func_i;
		_matriz[Library.nt_dec_func_i][Library.tk_inteiro] = Library.nt_dec_func_i_c2;
		_matriz[Library.nt_dec_func_i][Library.tk_booleano] = Library.nt_dec_func_i_c2; 
		_matriz[Library.nt_dec_func_i][Library.tk_cadeia] = Library.nt_dec_func_i_c2;
		_matriz[Library.nt_dec_func_i][Library.tk_real] = Library.nt_dec_func_i_c2; 
		_matriz[Library.nt_dec_func_i][Library.tk_caractere] = Library.nt_dec_func_i_c2; 
		//  PARAMENTROS
		Arrays.fill(_matriz[Library.nt_parametros], Library.nt_epsilon);
		_matriz[Library.nt_parametros][Library.tk_inteiro] = Library.nt_parametros;
		_matriz[Library.nt_parametros][Library.tk_booleano] = Library.nt_parametros; 
		_matriz[Library.nt_parametros][Library.tk_cadeia] = Library.nt_parametros;
		_matriz[Library.nt_parametros][Library.tk_real] = Library.nt_parametros; 
		_matriz[Library.nt_parametros][Library.tk_caractere] = Library.nt_parametros;
		// ARRAY  PARRAM
		Arrays.fill(_matriz[Library.nt_array_param], Library.nt_epsilon);
		_matriz[Library.nt_array_param][Library.tk_menor] = Library.nt_array_param;
		// ARRAY INDEX OPT
		Arrays.fill(_matriz[Library.nt_array_indexes_opt], Library.nt_epsilon);
		_matriz[Library.nt_array_indexes_opt][Library.tk_numero] = Library.nt_array_indexes; 
		_matriz[Library.nt_array_indexes_opt][Library.tk_booleano] = Library.nt_array_indexes; // TODO VERDADE - FALSO
		_matriz[Library.nt_array_indexes_opt][Library.tk_subtracao] = Library.nt_array_indexes;
		_matriz[Library.nt_array_indexes_opt][Library.tk_menor] = Library.nt_array_indexes;
		_matriz[Library.nt_array_indexes_opt][Library.tk_cadeia_de_caracteres] = Library.nt_array_indexes;
		_matriz[Library.nt_array_indexes_opt][Library.tk_soma] = Library.nt_array_indexes;
		_matriz[Library.nt_array_indexes_opt][Library.tk_caractere_l] = Library.nt_array_indexes;  
		_matriz[Library.nt_array_indexes_opt][Library.tk_abrir_parentese] = Library.nt_array_indexes;
		_matriz[Library.nt_array_indexes_opt][Library.tk_identificador] = Library.nt_array_indexes;
		// ARRAY PARAM I		
		Arrays.fill(_matriz[Library.nt_array_param_i], Library.nt_epsilon);
		_matriz[Library.nt_array_param_i][Library.tk_virgula] = Library.nt_array_param_i;
		//
		Arrays.fill(_matriz[Library.nt_parametros_i], Library.nt_epsilon);
		_matriz[Library.nt_parametros_i][Library.tk_virgula] = Library.nt_parametros_i;
		// RETORNO DE FUN
		_matriz[Library.nt_retorno_func][Library.tk_igual] = Library.nt_retorno_func;
		// CORPO
		Arrays.fill(_matriz[Library.nt_corpo], Library.nt_epsilon);
		_matriz[Library.nt_corpo][Library.tk_leia] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_inicio] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_var] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_menor] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_escreva] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_se] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_enquanto] = Library.nt_corpo;
		_matriz[Library.nt_corpo][Library.tk_identificador] = Library.nt_corpo;
		//COMANDOS
		_matriz[Library.nt_comandos][Library.tk_leia] = Library.nt_comandos_c1;
		_matriz[Library.nt_comandos][Library.tk_inicio] = Library.nt_comandos_c2;
		_matriz[Library.nt_comandos][Library.tk_var] = Library.nt_dec_var;
		_matriz[Library.nt_comandos][Library.tk_menor] = Library.nt_comandos_c3;
		_matriz[Library.nt_comandos][Library.tk_escreva] = Library.nt_comandos_c4;
		_matriz[Library.nt_comandos][Library.tk_se] = Library.nt_comandos_c5;
		_matriz[Library.nt_comandos][Library.tk_enquanto] = Library.nt_comandos_c6;
		_matriz[Library.nt_comandos][Library.tk_identificador] = Library.nt_comandos_c7;
		//LEIA_i
		Arrays.fill(_matriz[Library.nt_leitura_i], Library.nt_epsilon);
		_matriz[Library.nt_leitura_i][Library.tk_virgula] = Library.nt_leitura_i;
		// ESCREVIVEL_I
		Arrays.fill(_matriz[Library.nt_escrevivel_i], Library.nt_epsilon);
		_matriz[Library.nt_escrevivel_i][Library.tk_virgula] = Library.nt_escrevivel_i;
		
		
		
		
			
		// TODO AQUI
	}
	public void analises()
	{
		pilha.push(Library.tk_dolar);
		pilha.push(Library.nt_programa);
		
		tokens.add(Library.tk_const);
		tokens.add(Library.tk_inicio);
		tokens.add(Library.tk_inteiro);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_igual);
		tokens.add(Library.tk_menor);
		tokens.add(Library.tk_menor);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_maior);
		tokens.add(Library.tk_maior);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_soma);
		tokens.add(Library.tk_numero);
		tokens.add(Library.tk_soma);
		tokens.add(Library.tk_numero);
		tokens.add(Library.tk_multiplicacao);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_abrir_parentese);
		tokens.add(Library.tk_numero);
		tokens.add(Library.tk_fechar_parentese);
		tokens.add(Library.tk_maior);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_virgula);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_igual);
		tokens.add(Library.tk_numero);
		tokens.add(Library.tk_pontoevirgula);
		tokens.add(Library.tk_inteiro);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_igual);
		tokens.add(Library.tk_numero);
		tokens.add(Library.tk_virgula);
		tokens.add(Library.tk_identificador);
		tokens.add(Library.tk_igual);
		tokens.add(Library.tk_numero);
		tokens.add(Library.tk_pontoevirgula);
		tokens.add(Library.tk_fim);
		
		startMatriz();
		int valor;
		while(true){
			valor = pilha.peek();
			if(valor == Library.tk_dolar && tokens.isEmpty())
				Debuger.sysPrint("Sucess\n");
			else if(pilha.isEmpty())
				Debuger.sysPrint("Empty\n");
			else if(pilha.isEmpty() && tokens.size() != 0)
				Debuger.sysPrint("Error\n");
			else if(valor == Library.tk_dolar)
				Debuger.sysPrint("Sucess\n");
			
			else if (valor == tokenAtualId())
			{
				consumirToken();
				pilha.pop();
				Debuger.sysPrint("Consumir: "+valor);
			}
			else if(valor >= 44 && valor <= 200)
			{
				
				gerarProducao(valor);
				Debuger.sysPrint("gerar: "+valor);
			} else
			Debuger.sysPrint("LOL SAIU ");
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
		}
	}

	private void consumirToken() {
		i++;
	}

	private int tokenAtualId(){	
		if(i >= tokens.size())
		{ 
			return Library.tk_dolar;
		}
		Integer aux = tokens.get(i);
		return get_token_id(aux);
	}

	private int get_token_id(Integer aux) {
		
		return aux;
	}
	
	
	private int gerarProducao(int nt)
	{
		int nt_x = _matriz[nt][tokenAtualId()];
		//Debuger.sysPrint("RESULT: "+nt_x +" "+ nt + " " +tokenAtualId() );
		pilha.pop();
		switch(nt_x)
		{
		case Library.nt_inicio_const_var_func:
			pilha.push(Library.nt_dec_const_var_derivada);
			pilha.push(Library.nt_dec_const);
			break;
		case Library.nt_inicio_func:
			// <Decl_Func> <Decl_Main>
			pilha.push(Library.nt_dec_main);
			pilha.push(Library.nt_dec_func);
			break;
		case Library.nt_inicio_var_func:
			//<Decl_Var> <Decl_Func> <Decl_Main>
			pilha.push(Library.nt_dec_main);
			pilha.push(Library.nt_dec_func);
			pilha.push(Library.nt_dec_var);
			break;
			//'const' 'inicio' <Decl_Const_Continuo> 'fim'
		case Library.nt_dec_const:
			pilha.push(Library.tk_fim);
			pilha.push(Library.nt_dec_const_continuo);
			pilha.push(Library.tk_inicio);
			pilha.push(Library.tk_const);
			break;
		case Library.nt_dec_const_i:
			//',' Identificador '=' <Expr_Relacional_Booleana> <Decl_Const_I> | 
			pilha.push(Library.nt_dec_const_i);
			pilha.push(Library.nt_exp_relacional_bool); 
			pilha.push(Library.tk_igual);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.tk_virgula);
			break;
		case Library.nt_dec_const_continuo:
			//Tipo Identificador '=' <Expr_Relacional_Booleana> <Decl_Const_I> ';' <Decl_Const_II>
			pilha.push(Library.nt_dec_const_ii);
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.nt_dec_const_i);
			pilha.push(Library.nt_exp_relacional_bool);
			pilha.push(Library.tk_igual);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_tipo_n);
			break;
		case Library.nt_dec_const_ii:
			//Tipo Identificador '=' <Expr_Relacional_Booleana> <Decl_Const_I> ';' <Decl_Const_II> |
			pilha.push(Library.nt_dec_const_ii);
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.nt_dec_const_i);
			pilha.push(Library.nt_exp_relacional_bool); 
			pilha.push(Library.tk_igual);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_tipo_n);
			break;
		case Library.nt_dec_const_var_derivada_c1:
			//<Decl_Var> <Decl_Func> <Decl_Main> 
			pilha.push(Library.nt_dec_main);
			pilha.push(Library.nt_dec_func);
			pilha.push(Library.nt_dec_var);
			break;
		case Library.nt_dec_const_var_derivada_c2:
			//<Decl_Func> <Decl_Main>
			pilha.push(Library.nt_dec_main);
			pilha.push(Library.nt_dec_func);
			break;
		case Library.nt_dec_var:
			//'var' 'inicio' <Decl_Var_Continuo> 'fim'
			pilha.push(Library.tk_fim);
			pilha.push(Library.nt_dec_var_continuo);
			pilha.push(Library.tk_inicio);
			pilha.push(Library.tk_var);
			break;
		case Library.nt_dec_var_continuo:
			//Tipo <Array> Identificador <Decl_Var_I> ';' <Decl_Var_II>
			pilha.push(Library.nt_dec_var_ii);
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.nt_dec_var_i);			
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array);
			pilha.push(Library.nt_tipo_n);
			break;
		case Library.nt_dec_var_i:
			//',' <Array> Identificador <Decl_Var_I> 
			pilha.push(Library.nt_dec_var_i);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array);
			pilha.push(Library.tk_virgula);
			break;
		case Library.nt_dec_var_ii:
			// Tipo <Array> Identificador <Decl_Var_I> ';' <Decl_Var_II> | 
			pilha.push(Library.nt_dec_var_ii);
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.nt_dec_var_i);			
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array);
			pilha.push(Library.nt_tipo_n);
			break;
		case Library.nt_array:
			 pilha.push(Library.tk_maior);
			 pilha.push(Library.tk_maior);
			 pilha.push(Library.nt_array_i);
			 pilha.push(Library.nt_array_indexes);
			 pilha.push(Library.tk_menor);
             pilha.push(Library.tk_menor);
			break;
		case Library.nt_array_indexes:
			pilha.push(Library.nt_exp_simples);
			break;
		case Library.nt_array_i:
			pilha.push(Library.nt_array_i);
			pilha.push(Library.nt_array_indexes);
			pilha.push(Library.tk_virgula);
			break;
		case Library.nt_exp_relacional_bool:
			// <Expr_Conjunta> <Expr_Conjunta_I>
			pilha.push(Library.nt_exp_conjunta_i);
			pilha.push(Library.nt_exp_conjunta);
			break;
		case Library.nt_exp_conjunta:
			// <Expr_Relacional> <Expr_Relacional_I>  
			pilha.push(Library.nt_exp_relacional_i);
			pilha.push(Library.nt_exp_relacional);
			break;
		case Library.nt_exp_conjunta_i:
			//'ou' <Expr_Conjunta> <Expr_Conjunta_I> | 
			pilha.push(Library.nt_exp_conjunta_i);
			pilha.push(Library.nt_exp_conjunta);
			pilha.push(Library.tk_ou);
			break;
	
		case Library.nt_exp_relacional:
			// <Not_Opc> <Expr_Simples> <Operar_Relacionalmente>  
			pilha.push(Library.nt_operar_relacionalmente); 
			pilha.push(Library.nt_exp_simples);
			pilha.push(Library.nt_not_opc);
			Debuger.sysPrint("EMPILHOU");
			break;
		case Library.nt_operar_relacionalmente_c1:
			//<Not_Opc> <Expr_Simples> 
			pilha.push(Library.nt_exp_simples);
			pilha.push(Library.nt_not_opc);
			pilha.push(Library.tk_menor);
			break;
		case Library.nt_operar_relacionalmente_c2:
			//<Not_Opc> <Expr_Simples> 
			pilha.push(Library.nt_exp_simples);
			pilha.push(Library.nt_not_opc);
			pilha.push(Library.tk_maior);		
			break;
		case Library.nt_operar_relacionalmente_c3:
			//<Not_Opc> <Expr_Simples> 
			pilha.push(Library.nt_exp_simples);
			pilha.push(Library.nt_not_opc);
			pilha.push(Library.tk_menorigual);
			break;
		case Library.nt_operar_relacionalmente_c4:
			pilha.push(Library.nt_exp_simples);
			pilha.push(Library.nt_not_opc);
			pilha.push(Library.tk_maiorigual);	
			break;
		case Library.nt_operar_relacionalmente_c5:
			pilha.push(Library.nt_exp_simples);
			pilha.push(Library.nt_not_opc);
			pilha.push(Library.tk_diferente);	
			break;
		case Library.nt_exp_relacional_i:
			// 'e' <Expr_Relacional> <Expr_Relacional_I> | 
			pilha.push(Library.nt_exp_relacional_i);
			pilha.push(Library.nt_exp_relacional);
			pilha.push(Library.tk_e);
			break;
		case Library.nt_not_opc:
			//  'nao' <Not_Opc> |
			pilha.push(Library.nt_not_opc);
			pilha.push(Library.tk_nao);
			break;
		case Library.nt_exp_simples_c2:
			//<Operador_Mais_Menos> <Termo> <Termo_I> 
			pilha.push(Library.nt_termo_i);
			pilha.push(Library.nt_termo);
			pilha.push(Library.nt_op_mais_menos);
			break;
		case Library.nt_exp_simples:
			// <Termo> <Termo_I> 
			pilha.push(Library.nt_termo_i);
			pilha.push(Library.nt_termo);
			
			break;
		case Library.nt_op_mais_menos_c1:
			pilha.push(Library.tk_soma);
			break;
		case Library.nt_op_mais_menos_c2:
			pilha.push(Library.tk_subtracao);
			break;
		case Library.nt_op_multi_div_c1:
			pilha.push(Library.tk_multiplicacao);
			break;
		case Library.nt_op_multi_div_c2:
			pilha.push(Library.tk_divisao);
			break;
		case Library.nt_termo:
			//<Fator> <Fator_I>
			pilha.push(Library.nt_fator_i);
			pilha.push(Library.nt_fator);
			break;
		case Library.nt_termo_i:
			// <Operador_Mais_Menos> <Termo> <Termo_I>
			pilha.push(Library.nt_termo_i);
			pilha.push(Library.nt_termo);
			pilha.push(Library.nt_op_mais_menos);
			break;
		case Library.nt_fator_c1:
			pilha.push(Library.tk_numero);
			break;
		case Library.nt_fator_c2:
			pilha.push(Library.tk_booleano);
			break;
		case Library.nt_fator_c3:
			pilha.push(Library.tk_cadeia_de_caracteres);
			break;
		case Library.nt_fator_c4:
			pilha.push(Library.tk_caractere_l);
			break;
		case Library.nt_fator_c5:
			pilha.push(Library.tk_fechar_parentese);
			pilha.push(Library.nt_exp_relacional_bool);
			pilha.push(Library.tk_abrir_parentese);
			break;
		case Library.nt_fator_i:
			//<Operador_Mult_Div> <Fator> <Fator_I>
			pilha.push(Library.nt_fator_i);
			pilha.push(Library.nt_fator);
			pilha.push(Library.nt_op_multi_div);
			break;
		case Library.nt_id_funcao_e_outros:
			//'<''<' <Array_Indexes> <Array_I> '>''>' Identificador
			pilha.push(Library.tk_identificador);
			pilha.push(Library.tk_maior);
			pilha.push(Library.tk_maior);
			pilha.push(Library.nt_array_i);
			pilha.push(Library.nt_array_indexes);
			pilha.push(Library.tk_menor);
			pilha.push(Library.tk_menor);
			break;
		case Library.nt_id_funcao_e_outros_derivado:
			//Identificador <Possible_Func>
			pilha.push(Library.nt_possible_func);
			pilha.push(Library.tk_identificador);
			break;
		case Library.nt_possible_func:
			//'(' <Passa_Param> ')'
			
			pilha.push(Library.tk_fechar_parentese);
			pilha.push(Library.nt_passa_param);
			pilha.push(Library.tk_abrir_parentese);
			break;
		case Library.nt_passa_param:
			//<Expr_Relacional_Booleana> <Passa_Param_I> | 
			pilha.push(Library.nt_passa_param_i);
			pilha.push(Library.nt_exp_relacional_bool);
			break;
		case Library.nt_passa_param_i:
			//',' <Expr_Relacional_Booleana> <Passa_Param_I> | 
			pilha.push(Library.nt_passa_param_i);
			pilha.push(Library.nt_exp_relacional_bool);
			pilha.push(Library.tk_virgula);
			break;	
		case Library.nt_dec_func:
		//	'funcao' <Decl_Func_I> <Decl_Func> |
			
			pilha.push(Library.nt_dec_func);
			pilha.push(Library.nt_dec_func_i);
			pilha.push(Library.tk_funcao);
			break;
		case Library.nt_dec_func_i:
			//Identificador '(' <Parametros> ')' 'inicio' <Corpo> 'fim' 
			pilha.push(Library.tk_fim);
			pilha.push(Library.nt_corpo);
			pilha.push(Library.tk_inicio);
			pilha.push(Library.tk_fechar_parentese);
			pilha.push(Library.nt_parametros);
			pilha.push(Library.tk_abrir_parentese);
			pilha.push(Library.tk_identificador);
			
			break;
		case Library.nt_dec_func_i_c2:
			// Tipo Identificador '(' <Parametros> ')' 'inicio' <Corpo> <Retorno_Func> 'fim'
			pilha.push(Library.tk_fim);
			pilha.push(Library.nt_retorno_func);
			pilha.push(Library.nt_corpo);
			pilha.push(Library.tk_inicio);
			pilha.push(Library.tk_fechar_parentese);
			pilha.push(Library.nt_parametros);
			pilha.push(Library.tk_abrir_parentese);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_tipo_n);
			break;
		case Library.nt_parametros:
			//Tipo <Array_Param> Identificador <Parametros_I> 
			pilha.push(Library.nt_parametros_i);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array_param);
			pilha.push(Library.nt_tipo_n);
			break;
		case Library.nt_array_param:
			// '<''<' <Array_Indexes_Opt> <Array_Param_I> '>''>'
			pilha.push(Library.tk_maior);
			pilha.push(Library.tk_maior);
			pilha.push(Library.nt_array_param_i);
			pilha.push(Library.nt_array_indexes_opt);
			pilha.push(Library.tk_menor);
			pilha.push(Library.tk_menor);
			break;
		case Library.nt_array_param_i:
			//',' <Array_Indexes_Opt> <Array_Param_I> |
			pilha.push(Library.nt_array_param_i);
			pilha.push(Library.nt_array_indexes_opt);
			pilha.push(Library.tk_virgula);
			break;
		case Library.nt_parametros_i:
			//',' Tipo <Array_Param> Identificador <Parametros_I> |
			pilha.push(Library.nt_parametros_i);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array_param);
			pilha.push(Library.nt_tipo_n);
			pilha.push(Library.tk_virgula);
			break;
		case Library.nt_retorno_func:
			//'=' '>' <Expr_Relacional_Booleana> '=' '>' ';'
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.tk_maior);
			pilha.push(Library.tk_igual);
			pilha.push(Library.nt_exp_relacional_bool);
			pilha.push(Library.tk_maior);
			pilha.push(Library.tk_igual);
			break;
		case Library.nt_corpo:
			//<Comandos> <Corpo> | 
			pilha.push(Library.nt_corpo);
			pilha.push(Library.nt_comandos);
			break;
		case Library.nt_comandos_c1:
			//'leia' '(' <Array> Identificador <Leitura_I> ')' ';'
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.tk_fechar_parentese);
			pilha.push(Library.nt_leitura_i);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array);
			pilha.push(Library.tk_abrir_parentese);
			pilha.push(Library.tk_leia);
			break;
		case Library.nt_leitura_i:  
			//',' <Array> Identificador <Leitura_I> |
			pilha.push(Library.nt_leitura_i);
			pilha.push(Library.tk_identificador);
			pilha.push(Library.nt_array);
			pilha.push(Library.tk_virgula);
			break;			
		case Library.nt_comandos_c2:
			pilha.push(Library.tk_inicio);
			break;
		case Library.nt_comandos_c3:
			pilha.push(Library.tk_menor);
			
			break;
		case Library.nt_comandos_c4:
			//'escreva' '(' <Escrevivel> <Escrevivel_I> ')' ';'
			pilha.push(Library.tk_pontoevirgula);
			pilha.push(Library.tk_fechar_parentese);
			pilha.push(Library.nt_escrevivel_i);
			pilha.push(Library.nt_escrevivel);
			pilha.push(Library.tk_abrir_parentese);
			pilha.push(Library.tk_escreva);
			break;
		case Library.nt_escrevivel:
			break;
		case Library.nt_escrevivel_i:
			break;
			
		case Library.nt_comandos_c5:
			pilha.push(Library.tk_se);
			break;
		case Library.nt_comandos_c6:
			pilha.push(Library.tk_enquanto);
			break;
		case Library.nt_comandos_c7:
			pilha.push(Library.tk_identificador);
			break;
			// TODO AQUIIII 
			
			
		case Library.nt_tipo_c1:
			pilha.push(Library.tk_inteiro);
			break;
		case Library.nt_tipo_c2:
			pilha.push(Library.tk_real);
			break;
		case Library.nt_tipo_c3:
			pilha.push(Library.tk_booleano);
			break;
		case Library.nt_tipo_c4:
			pilha.push(Library.tk_cadeia);
			break;
		case Library.nt_tipo_c5:
			pilha.push(Library.tk_caractere);
			break;
			
			
			
		case Library.nt_epsilon:
			break;
			
		default:
			pilha.push(nt);
			return -1;
				
		}
		return 0;
	}
	
}